{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S556370\\\\Desktop\\\\Final Project\\\\project\\\\src\\\\routes\\\\AddProject.js\",\n  _s = $RefreshSig$();\nimport { Button, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, Grid, IconButton, MenuItem, Radio, RadioGroup, Select, TextField, Typography } from \"@mui/material\";\nimport styled from \"styled-components\";\nimport Attachments from \"../components/Attachments\";\nimport { Plus } from \"@phosphor-icons/react\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport useProject from \"../hooks/useProjectHook\";\nimport { categoriesList } from \"../utils/constants\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddProjectCard = styled.div`\n  background-color: whitesmoke;\n  padding: 1rem;\n  border-radius: 10px;\n  box-shadow: 0px 0px 5px 3px rgba(202, 239, 255, 0.43);\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n_c = AddProjectCard;\nconst AddProjectContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\nconst AddProjectFooter = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n_c2 = AddProjectFooter;\nconst MainGrid = styled.div`\n  display: grid;\n  ${({\n  gridTemplateArea\n}) => gridTemplateArea ? `\n        grid-template-areas: ${gridTemplateArea};\n    ` : \"\"}\n  ${({\n  gap,\n  gridColumn\n}) => `\n        ${gap ? `gap: ${gap};` : \"\"}\n        ${gridColumn ? `grid-template-columns: ${gridColumn};` : \"\"}\n    `}\n`;\n_c3 = MainGrid;\nconst GridItem = styled.div`\n  ${({\n  gridArea\n}) => gridArea ? `\n        grid-area: ${gridArea};\n    ` : \"\"}\n  ${({\n  gap,\n  flexColumn\n}) => `\n        ${gap ? `gap: ${gap};` : \"\"}\n        ${flexColumn ? `display: flex; flex-direction: column;` : \"\"}\n    `}\n`;\n_c4 = GridItem;\nconst validations = {\n  sub: {\n    required: \"Please input Project Title\"\n  },\n  shortIntro: {\n    required: \"Please input Short Intro\"\n  },\n  desc: {\n    required: \"Please enter Description\"\n  },\n  startDate: {\n    required: \"Please Add Start Date of the Project\"\n  },\n  endDate: {\n    required: \"Please Add End Date of the Project\"\n  }\n};\nexport default function AddProject() {\n  _s();\n  const [projectFormData, setProjectFormData] = useState({\n    sub: \"\",\n    shortIntro: \"\",\n    desc: \"\",\n    status: \"DRAFT\",\n    visibility: true,\n    startDate: \"\",\n    endDate: \"\"\n  });\n  const [attachments, setAttachments] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [categoryList, setCategoryList] = useState(categoriesList);\n  const [newCategoryText, setNewCategoryText] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const {\n    addProject,\n    updateProject\n  } = useProject();\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    var _location$state;\n    if ((location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.type) === \"edit\") {\n      const {\n        startDate,\n        endDate,\n        categories,\n        attachments\n      } = location === null || location === void 0 ? void 0 : location.state;\n      setProjectFormData({\n        ...(location === null || location === void 0 ? void 0 : location.state),\n        ...(startDate ? {\n          startDate: moment(new Date(startDate)).format(\"YYYY-MM-DD\")\n        } : {}),\n        ...(endDate ? {\n          endDate: moment(new Date(endDate)).format(\"YYYY-MM-DD\")\n        } : {})\n      });\n      setCategories(categories || []);\n      setAttachments(attachments || []);\n    }\n  }, [location === null || location === void 0 ? void 0 : location.state]);\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      var _location$state2;\n      let hasError = \"\";\n      Object.keys(validations).forEach(item => {\n        var _projectFormData$item;\n        if (!hasError && !((_projectFormData$item = projectFormData[item]) !== null && _projectFormData$item !== void 0 && _projectFormData$item.trim())) {\n          hasError = validations[item].required;\n        }\n      });\n      if (!hasError && categories && (categories === null || categories === void 0 ? void 0 : categories.length) <= 0) {\n        hasError = \"Please add atleast one category\";\n      }\n      if (hasError) throw new Error(hasError);\n      const data = {\n        ...projectFormData,\n        attachments: attachments || [],\n        categories: categories || []\n      };\n      if ((location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.type) === \"edit\") {\n        var _location$state3;\n        await updateProject({\n          sub: data.sub,\n          shortIntro: data.shortIntro,\n          desc: data.desc,\n          status: data.status,\n          visibility: data.visibility,\n          startDate: data.startDate,\n          endDate: data.endDate,\n          categories: categories || [],\n          attachments: attachments || [],\n          ...((data === null || data === void 0 ? void 0 : data.approved) === false ? {\n            approved: null,\n            approvedBy: \"\"\n          } : {})\n        }, location === null || location === void 0 ? void 0 : (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.id);\n      } else {\n        await addProject(data);\n      }\n      navigate(\"/myprojects\");\n    } catch (error) {\n      setError((error === null || error === void 0 ? void 0 : error.message) || \"Something went wrong\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCategoryAdd = e => {\n    const {\n      checked,\n      value\n    } = e.target;\n    if (checked) {\n      setCategories(prevState => [...prevState, value]);\n    } else {\n      const index = categories.indexOf(value);\n      if (index > -1) {\n        setCategories(prevState => {\n          prevState.splice(index, 1);\n          return [...prevState];\n        });\n      }\n    }\n  };\n  const onValueChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setProjectFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(MainGrid, {\n    gridTemplateArea: \"'title title' 'left-section right-section' 'footer footer'\",\n    gap: \"1rem\",\n    gridColumn: \"2fr 1fr\",\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      gridArea: \"title\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Add New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      gridArea: \"left-section\",\n      children: /*#__PURE__*/_jsxDEV(AddProjectCard, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Project Title\",\n          variant: \"outlined\",\n          required: true,\n          size: \"small\",\n          value: projectFormData.sub,\n          name: \"sub\",\n          onChange: onValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Short intro about Project in 50 words.\",\n          variant: \"outlined\",\n          size: \"small\",\n          multiline: true,\n          required: true,\n          rows: 2,\n          value: projectFormData.shortIntro,\n          name: \"shortIntro\",\n          onChange: onValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Description of 200 words.\",\n          variant: \"outlined\",\n          size: \"small\",\n          required: true,\n          multiline: true,\n          minRows: 10,\n          value: projectFormData.desc,\n          name: \"desc\",\n          onChange: onValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Attachments, {\n          title: \"Add Attachments\",\n          onAttachment: setAttachments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      gridArea: \"right-section\",\n      flexColumn: true,\n      gap: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(AddProjectCard, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Project Start Date\",\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"date\",\n          required: true,\n          InputLabelProps: {\n            shrink: true\n          },\n          fullWidth: true,\n          value: projectFormData.startDate,\n          name: \"startDate\",\n          onChange: onValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Project End Date\",\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"date\",\n          required: true,\n          InputLabelProps: {\n            shrink: true\n          },\n          fullWidth: true,\n          value: projectFormData.endDate,\n          name: \"endDate\",\n          onChange: onValueChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          sx: {\n            paddingInline: \"0.2rem\"\n          },\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Privacy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            value: projectFormData.visibility,\n            name: \"visibility\",\n            onChange: onValueChange,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: true,\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 55\n              }, this),\n              label: \"Public\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: false,\n              control: /*#__PURE__*/_jsxDEV(Radio, {\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 56\n              }, this),\n              label: \"Private\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          sx: {\n            paddingInline: \"0.2rem\"\n          },\n          size: \"small\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            size: \"small\",\n            value: projectFormData.status,\n            name: \"status\",\n            onChange: onValueChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"DRAFT\",\n              children: \"Draft\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"PENDING\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"COMPLETED\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddProjectCard, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            style: {\n              maxHeight: \"10rem\",\n              overflowY: \"auto\",\n              flexWrap: \"nowrap\"\n            },\n            children: categoryList.map(item => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              label: item,\n              value: item,\n              onChange: handleCategoryAdd,\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: categories.indexOf(item) > -1 ? true : false,\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 28\n              }, this)\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      gridArea: \"footer\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"0.5rem\",\n          marginBottom: \"0.5rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddProjectFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"small\",\n          onClick: handleSubmit,\n          disabled: isLoading,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(AddProject, \"gxFeAV8UnyDSg4uJvTTkuVVPNFw=\", false, function () {\n  return [useProject, useNavigate, useLocation];\n});\n_c5 = AddProject;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AddProjectCard\");\n$RefreshReg$(_c2, \"AddProjectFooter\");\n$RefreshReg$(_c3, \"MainGrid\");\n$RefreshReg$(_c4, \"GridItem\");\n$RefreshReg$(_c5, \"AddProject\");","map":{"version":3,"names":["Button","Checkbox","FormControl","FormControlLabel","FormGroup","FormLabel","Grid","IconButton","MenuItem","Radio","RadioGroup","Select","TextField","Typography","styled","Attachments","Plus","useEffect","useState","useLocation","useNavigate","useProject","categoriesList","moment","jsxDEV","_jsxDEV","AddProjectCard","div","_c","AddProjectContent","AddProjectFooter","_c2","MainGrid","gridTemplateArea","gap","gridColumn","_c3","GridItem","gridArea","flexColumn","_c4","validations","sub","required","shortIntro","desc","startDate","endDate","AddProject","_s","projectFormData","setProjectFormData","status","visibility","attachments","setAttachments","categories","setCategories","categoryList","setCategoryList","newCategoryText","setNewCategoryText","isLoading","setIsLoading","error","setError","addProject","updateProject","navigate","location","_location$state","state","type","Date","format","handleSubmit","_location$state2","hasError","Object","keys","forEach","item","_projectFormData$item","trim","length","Error","data","_location$state3","approved","approvedBy","id","message","handleCategoryAdd","e","checked","value","target","prevState","index","indexOf","splice","onValueChange","name","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","label","size","onChange","multiline","rows","minRows","title","onAttachment","InputLabelProps","shrink","fullWidth","component","sx","paddingInline","control","style","maxHeight","overflowY","flexWrap","map","textAlign","marginTop","marginBottom","color","onClick","disabled","_c5","$RefreshReg$"],"sources":["C:/Users/S556370/Desktop/Final Project/project/src/routes/AddProject.js"],"sourcesContent":["import {\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormLabel,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport Attachments from \"../components/Attachments\";\r\nimport { Plus } from \"@phosphor-icons/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport useProject from \"../hooks/useProjectHook\";\r\nimport { categoriesList } from \"../utils/constants\";\r\nimport moment from \"moment\";\r\n\r\nconst AddProjectCard = styled.div`\r\n  background-color: whitesmoke;\r\n  padding: 1rem;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 0px 5px 3px rgba(202, 239, 255, 0.43);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst AddProjectContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst AddProjectFooter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst MainGrid = styled.div`\r\n  display: grid;\r\n  ${({ gridTemplateArea }) =>\r\n    gridTemplateArea\r\n      ? `\r\n        grid-template-areas: ${gridTemplateArea};\r\n    `\r\n      : \"\"}\r\n  ${({ gap, gridColumn }) => `\r\n        ${gap ? `gap: ${gap};` : \"\"}\r\n        ${gridColumn ? `grid-template-columns: ${gridColumn};` : \"\"}\r\n    `}\r\n`;\r\n\r\nconst GridItem = styled.div`\r\n  ${({ gridArea }) =>\r\n    gridArea\r\n      ? `\r\n        grid-area: ${gridArea};\r\n    `\r\n      : \"\"}\r\n  ${({ gap, flexColumn }) => `\r\n        ${gap ? `gap: ${gap};` : \"\"}\r\n        ${flexColumn ? `display: flex; flex-direction: column;` : \"\"}\r\n    `}\r\n`;\r\n\r\nconst validations = {\r\n  sub: {\r\n    required: \"Please input Project Title\",\r\n  },\r\n  shortIntro: {\r\n    required: \"Please input Short Intro\",\r\n  },\r\n  desc: {\r\n    required: \"Please enter Description\",\r\n  },\r\n  startDate: {\r\n    required: \"Please Add Start Date of the Project\",\r\n  },\r\n  endDate: {\r\n    required: \"Please Add End Date of the Project\",\r\n  },\r\n};\r\n\r\nexport default function AddProject() {\r\n  const [projectFormData, setProjectFormData] = useState({\r\n    sub: \"\",\r\n    shortIntro: \"\",\r\n    desc: \"\",\r\n    status: \"DRAFT\",\r\n    visibility: true,\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  const [attachments, setAttachments] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categoryList, setCategoryList] = useState(categoriesList);\r\n  const [newCategoryText, setNewCategoryText] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const { addProject, updateProject } = useProject();\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (location?.state?.type === \"edit\") {\r\n      const { startDate, endDate, categories, attachments } = location?.state;\r\n      setProjectFormData({\r\n        ...location?.state,\r\n        ...(startDate\r\n          ? {\r\n              startDate: moment(new Date(startDate)).format(\"YYYY-MM-DD\"),\r\n            }\r\n          : {}),\r\n        ...(endDate\r\n          ? {\r\n              endDate: moment(new Date(endDate)).format(\"YYYY-MM-DD\"),\r\n            }\r\n          : {}),\r\n      });\r\n      setCategories(categories || []);\r\n      setAttachments(attachments || []);\r\n    }\r\n  }, [location?.state]);\r\n\r\n  const handleSubmit = async () => {\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    try {\r\n      let hasError = \"\";\r\n      Object.keys(validations).forEach((item) => {\r\n        if (!hasError && !projectFormData[item]?.trim()) {\r\n          hasError = validations[item].required;\r\n        }\r\n      });\r\n      if (!hasError && categories && categories?.length <= 0) {\r\n        hasError = \"Please add atleast one category\";\r\n      }\r\n      if (hasError) throw new Error(hasError);\r\n      const data = {\r\n        ...projectFormData,\r\n        attachments: attachments || [],\r\n        categories: categories || [],\r\n      };\r\n      if (location?.state?.type === \"edit\") {\r\n        await updateProject(\r\n          {\r\n            sub: data.sub,\r\n            shortIntro: data.shortIntro,\r\n            desc: data.desc,\r\n            status: data.status,\r\n            visibility: data.visibility,\r\n            startDate: data.startDate,\r\n            endDate: data.endDate,\r\n            categories: categories || [],\r\n            attachments: attachments || [],\r\n            ...(data?.approved === false ? { approved: null, approvedBy: \"\" } : {}),\r\n          },\r\n          location?.state?.id\r\n        );\r\n      } else {\r\n        await addProject(data);\r\n      }\r\n      navigate(\"/myprojects\");\r\n    } catch (error) {\r\n      setError(error?.message || \"Something went wrong\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCategoryAdd = (e) => {\r\n    const { checked, value } = e.target;\r\n    if (checked) {\r\n      setCategories((prevState) => [...prevState, value]);\r\n    } else {\r\n      const index = categories.indexOf(value);\r\n      if (index > -1) {\r\n        setCategories((prevState) => {\r\n          prevState.splice(index, 1);\r\n          return [...prevState];\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onValueChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setProjectFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <MainGrid gridTemplateArea=\"'title title' 'left-section right-section' 'footer footer'\" gap=\"1rem\" gridColumn=\"2fr 1fr\">\r\n      <GridItem gridArea=\"title\">\r\n        <Typography variant=\"h5\">Add New Project</Typography>\r\n      </GridItem>\r\n      <GridItem gridArea=\"left-section\">\r\n        <AddProjectCard>\r\n          <TextField label=\"Project Title\" variant=\"outlined\" required size=\"small\" value={projectFormData.sub} name=\"sub\" onChange={onValueChange} />\r\n          <TextField\r\n            label=\"Short intro about Project in 50 words.\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            multiline\r\n            required\r\n            rows={2}\r\n            value={projectFormData.shortIntro}\r\n            name=\"shortIntro\"\r\n            onChange={onValueChange}\r\n          />\r\n          <TextField\r\n            label=\"Description of 200 words.\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            multiline\r\n            minRows={10}\r\n            value={projectFormData.desc}\r\n            name=\"desc\"\r\n            onChange={onValueChange}\r\n          />\r\n          <Attachments title=\"Add Attachments\" onAttachment={setAttachments} />\r\n        </AddProjectCard>\r\n      </GridItem>\r\n      <GridItem gridArea=\"right-section\" flexColumn gap=\"1rem\">\r\n        <AddProjectCard>\r\n          <TextField\r\n            label=\"Project Start Date\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"date\"\r\n            required\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            value={projectFormData.startDate}\r\n            name=\"startDate\"\r\n            onChange={onValueChange}\r\n          />\r\n          <TextField\r\n            label=\"Project End Date\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"date\"\r\n            required\r\n            InputLabelProps={{ shrink: true }}\r\n            fullWidth\r\n            value={projectFormData.endDate}\r\n            name=\"endDate\"\r\n            onChange={onValueChange}\r\n          />\r\n          <FormControl\r\n            component=\"fieldset\"\r\n            sx={{\r\n              paddingInline: \"0.2rem\",\r\n            }}\r\n            required\r\n          >\r\n            <FormLabel component=\"legend\">Privacy</FormLabel>\r\n            <RadioGroup value={projectFormData.visibility} name=\"visibility\" onChange={onValueChange}>\r\n              <FormControlLabel value={true} control={<Radio size=\"small\" />} label=\"Public\" />\r\n              <FormControlLabel value={false} control={<Radio size=\"small\" />} label=\"Private\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <FormControl\r\n            component=\"fieldset\"\r\n            sx={{\r\n              paddingInline: \"0.2rem\",\r\n            }}\r\n            size=\"small\"\r\n            required\r\n          >\r\n            <FormLabel component=\"legend\">Status</FormLabel>\r\n            <Select size=\"small\" value={projectFormData.status} name=\"status\" onChange={onValueChange}>\r\n              <MenuItem value=\"DRAFT\">Draft</MenuItem>\r\n              <MenuItem value=\"PENDING\">Pending</MenuItem>\r\n              <MenuItem value=\"COMPLETED\">Completed</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </AddProjectCard>\r\n        <AddProjectCard>\r\n          <FormControl component=\"fieldset\" required>\r\n            <FormLabel component=\"legend\">Categories</FormLabel>\r\n            <FormGroup style={{ maxHeight: \"10rem\", overflowY: \"auto\", flexWrap: \"nowrap\" }}>\r\n              {categoryList.map((item) => (\r\n                <FormControlLabel\r\n                  key={item}\r\n                  label={item}\r\n                  value={item}\r\n                  onChange={handleCategoryAdd}\r\n                  control={<Checkbox checked={categories.indexOf(item) > -1 ? true : false} size=\"small\" />}\r\n                />\r\n              ))}\r\n            </FormGroup>\r\n          </FormControl>\r\n        </AddProjectCard>\r\n      </GridItem>\r\n      <GridItem gridArea=\"footer\">\r\n        {error && (\r\n          <div style={{ textAlign: \"center\", marginTop: \"0.5rem\", marginBottom: \"0.5rem\" }}>\r\n            <Typography variant=\"caption\" color=\"error\">\r\n              {error}\r\n            </Typography>\r\n          </div>\r\n        )}\r\n        <AddProjectFooter>\r\n          <Button variant=\"contained\" size=\"small\" onClick={handleSubmit} disabled={isLoading}>\r\n            Submit\r\n          </Button>\r\n        </AddProjectFooter>\r\n      </GridItem>\r\n    </MainGrid>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}